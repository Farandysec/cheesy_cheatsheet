BASHCRIPT
Bashcript


#!/bin/bash

#This is a comment
#This is a comment too!


CLI PROMPT SCRIPTING

===================================================================
set counter=0
set counter_start=0
set counter_finisher=10


for (( i=$counter_start ; i<=$counter_finisher ; i++ )) ; do echo "$i" ; done

for (( i=0; i<=254; i++ )) ; do echo "$i" ; done

for (( i=0; i<=254; i++ )) ; do enum4linux -v 10.11.1."$i" > enum4linux_scan_"$i" ; done

for ip in $(seq 1 254);do echo 10.11.1.$ip;done > ips

FILE SCRIPTING

====================================================================
#!/bin/bash

#Check if the argument does exist
if [ -z "$1" ]; then
echo "Please provide a domain name"
exit 0
fi

echo "Performing zone transfer for $1"

echo "List of NS Servers"
host -t ns $1 | cut -d " " -f4

printf "\n"

echo "List domains on $1 "

printf "\n"

for server in $(host -t ns $1 |cut -d" " -f4);do
host -l $1 $server |grep "has address"|cut -d" " -f1
done

=====================================================================
#!/bin/bash

for name in $(cat list.txt); do
	host $name.domainnametocheck.com|grep "has address"|cut -d " " -f1,4
done

======================================================================
#!/bin/bash

#LIST OF IP ADDRESSES
file_list=muieblackcat_list
#LIST OF URLs
file_get_req=muieblackcat_req
sleep_counter=0

while read LINE_list; do
		while read LINE_req; do
						if [ "$sleep_counter" 5 ]
								then
								sleep 1
								sleep_counter=0
						fi
				((sleep_counter++))
				wget --no-check-certificate --tries=2 http://"$LINE_list$LINE_req"
		done < $file_get_req
done < $file_list

=======================================================================

#!/bin/bash

#Check if the argument does exist
if [ -z "$1" ]; then
echo "Please provide a domain name"
exit 0
fi

echo "Performing zone transfer for $1"

echo "List of NS Servers"
host -t ns $1 | cut -d " " -f4

printf "\n"

echo "List domains on $1 "

printf "\n"

for server in $(host -t ns $1 |cut -d" " -f4);do
host -l $1 $server |grep "has address"|cut -d" " -f1
done

=======================================================================
cat osce_opcode | while read line;do rasm2 -a x86 -b 32 -d $line;done

=======================================================================
cat list_of_targets | while read line; do hydra -L usernames_smb -P passwords_smb $line smb > hydra_$line; done










=======================================================================
Simple Bash Scripting Cheatsheet

=======================================================================


[+] nano Shortcuts
ctrl v			Next page.
ctrl y			Previous page.
ctrl w			Where is (find).
ctrl k			Cut that line of test.
ctrl x     		Exit editor.

[+] Create a text file:
touch file		Creates an empty file.
ifconfig > tmp	pipe the output of a command
nano file

[+] Create a file and append text to it:
ifconfig > tmp     
echo >> tmp
ping google.com -c3 >> tmp

[+] How to view a file:
cat file		Show entire contents of file.
more file		Show one page at a time.  Space bar for next page and (q) to exit.
head file		Show the first 10 lines.
head -15 file	Show the first 15 lines.
tail file		Show the last 10 lines.
tail -15 file	Show the last 15 lines.
tail -f file	Useful when viewing the output of a log file.

[+] pipe
cat tmp | grep Bcast	Feeds the output of one process to the input of another process.

[+] Processes
ps aux			Show all running process for all users.
kill -9 PID		Nicely kill a PID.

[+] Word Count
wc -l tmp2		Count the number of lines in a file

[+] cut
-d  delimiter
-f  fields

[+] sort
Sort by unique		sort -u file
sort IP addresses correct		sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n
cat tmp2 | cut -d '(' -f2 | cut -d ')' -f1 | sort -u		Isolate the IP address

[+] awk
awk '{print $1}' file 		Show the 1st column.
awk '{print $1,$5}' file 	Show the 1st and 5th columns.

[+] grep
grep -v		Remove a single string.
grep -v 'red' file

[+] egrep -v
Remove multiple strings	egrep -v '(red|white|blue)' file

[+] sed
sed 's/FOO/BAR/g' file 		Replace FOO with BAR.
sed 's/FOOg' file 		Replace FOO with nothing.
sed '/^FOO/d' file 			Remove lines that start with FOO.

[+] colour
31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 
echo -e "\e[1;34mThis is a blue text.\e[0m"




Bash Scripts
--------------------

[+] Simple bash script:
#!/bin/bash
clear
echo
echo
print "Hello world."

[+] Make a file executable.
chmod +x file
chmod 755 file

[+] Variables
name=Bob
echo $name
user=$(whoami)
echo $user
echo 'Hello' $name. 'You are running as' $user.

#!/bin/bash
clear
echo "Hello World"
name=Bob
ip=`ifconfig | grep "Bcast:" | cut -d":" -f2 | cut -d" " -f1`
echo "Hello" $name "Your IP address is:" $ip

[+] User Input
read -p "Domain: " domain

#!/bin/bash
echo "Please input your domain:"
read -p "Domain:" domain
ping -c 5 $domain

[+] Check For No User Input
if [ -z $domain ]; then
	echo
	echo "#########################"
	echo
	echo "Invalid choice."
	echo
	exit
fi

[+] For loops
#!/bin/bash

for host in $(cat hosts.txt)
do
	command $host
done

[+] One Liners

Port Scan:
for port in $(cat Ports.txt); do nc -nzv 192.168.0.1 $port & sleep 0.5; done


